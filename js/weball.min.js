
var red = [[1],[],[],[],[],[],[],[],[],[]];
var blue = [[2],[],[],[],[],[],[],[],[],[]];





/**
*   Move the Shooter
*/
$(".home").click(function() {
  let shooter = $('#' + $(this).attr("id") + ">.shooter"); // Get side
  shooter.animate({opacity: 0.4}, 10); // Effect Start
  let playgroundMax = playground.height()-78; // get Max
  let shooterY = event.pageY-(playground.offset().top); // get clicked point
  shooterY = (shooterY > playgroundMax) ? (playgroundMax) : shooterY; // Check Max < PgMax
  shooterY = (shooterY < 0) ? (shooterY + 38) : shooterY; // Check Min > 0
  shooter.animate({top: shooterY}, 130).animate({opacity: 1}, 8); // Move && End Effect
  // Log Move
  console.log(shooter.data('side')+' Shooter moved to: '+shooterY);
});





var hand, win;
var ballId = 2;
var ballRed = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
var ballBlue = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
var playground = $("#playground");
var homeRight = $("#homeRight");
var shooterRight = $("#shooterRight");
var homeLeft = $("#homeLeft");
var shooterLeft = $("#shooterLeft");
var lineLeft = $("#lineLeft");
var lineRight = $("#lineRight");


function round35(x) {
    return (x % 35) >= 17.5 ? parseInt(x / 35) * 35 + 35 : parseInt(x / 35) * 35;
}


function winner (win) {
  console.log(win +' is Winner !');
  hand = false;
  homeLeft.fadeOut('slow');
  homeRight.fadeOut('slow');
}

function turnHand (activeHand) {
  hand = activeHand;
  shooter = (hand == 'left') ? homeRight : homeLeft;
  homeLeft.animate({opacity: 1}, 1);
  homeRight.animate({opacity: 1}, 1);
  shooter.animate({opacity: 0.3}, 5);
  console.log(' ---------- ');
  console.log(ballRed+' Red');
  console.log(ballBlue+' Blue');
  console.log('Ball ' +ballId + ' Shooted, Now '+ activeHand + ' Turn ');
  ballId++;

};
turnHand ('right');

$(".shooter").click(function() {
  let destroy = false;
  let shooterId = '#' + $(this).attr("id");
  if (hand == 'right') {
    ballColor = 'red';
    nextHand = 'left';
    handShooter = '#shooterRight';
    line = lineLeft;
  } else if (hand == 'left') {
    ballColor = 'blue';
    nextHand = 'right';
    handShooter = '#shooterLeft';
    line = lineRight;
  }
  if (shooterId == handShooter) {
    var shooterBall = $(shooterId+' .circle').offset();
    var playgroundTOP = playground.offset().top;
    var playgroundMax = playground.height();
    var newball = '<figure id="ball-'+ballId+'" class="circle '+ballColor+'"></figure>'
    line.append(newball);
    ball = $("#ball-"+ballId);
    ball.animate({opacity: 0.60}, 50);
    ball.offset(shooterBall); // Place to Shooter
    ball.animate({opacity: 0.40}, 50);
    ball.animate({opacity: 0.60}, 50);
    ball.animate({opacity: 0.80}, 50);
    placeY = round35(shooterBall.top)-playgroundTOP;
    var ballRow = (round35(shooterBall.top-playgroundTOP)/35);

    var optionsX = {};
    if (ballColor == 'blue') {
      ballBlue[ballRow]++;
      optionsX['left'] = -30 + (ballBlue[ballRow]*35);
      win = (ballBlue[ballRow] > 9) ? 'left' : false;
    } else {
      ballRed[ballRow]++;
      optionsX['left'] = - (ballRed[ballRow]*35);
      win = (ballRed[ballRow] > 8) ? 'right' : false;
    }
    if (!win && (ballRed[ballRow]+ballBlue[ballRow])>8) {
      destroy = true;
    }
    if (destroy) {
      console.log(destroy+' destroy ');
      setTimeout(function(){
        ball.animate({opacity: 0.15}, 5).removeClass('red').addClass('destroy');
      }, 500);

      // need to grab rival ball
      $('#ball-'+(ballId-1)).animate({top:placeY-35});
      $('#ball-'+(ballId-1)).animate({left:placeY-35});

      if (hand == 'right') {
        ballBlue[0]++
        optionsX['left'] = -35 + (ballRed[0]*35);
      } else {
        ballRed[0]++
        optionsX['left'] = -5 - (ballBlue[0]*35);
      }
      ballBlue[ballRow]--;
      ballRed[ballRow]--;
    }
    ball.animate(optionsX, 550);

    ball.animate({top:placeY}, 150); // Fit to row
    ball.animate({opacity: 1}, 30);
    (win) ? winner(win) : turnHand (nextHand);
  } else {
    console.log(handShooter+' != ' + shooterId);
  }
});
